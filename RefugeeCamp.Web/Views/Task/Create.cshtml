@using RefugeeCamp.Web.Security
@model RefugeeCamp.Domain.Models.task

@{
    ViewBag.Title = "Create";
}

<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Task Creation</h3>
    </div>
    <div class="col-md-7 align-self-center">

    </div>

</div>

<div class="container-fluid">
    <div class="col-12">
        
        <div class="card">
            <div class="card-body">

                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "AddTaskForm" , @class= "floating-labels m-t-40" }))
                {
                    @Html.AntiForgeryToken()

                   
        
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                   
                    <div class="form-group  col-md-4">

                        @Html.TextAreaFor(model => model.name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                         
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.name, "Name", htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="form-group col-md-4">
                            
                        @Html.TextAreaFor(model => model.description, new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                                
                        <span class="bar"></span>
                        @Html.LabelFor(model => model.description, "Description", htmlAttributes: new { @class = "control-label " })

                    </div>
                   

                       
                    <div class="form-group col-md-4">
                        @Html.DropDownListFor(model => model.UserId, (SelectList)ViewData["users"], new { @class = "select2 form-control custom-select select2-hidden-accessible" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                            
                        <span class="bar"></span>

                    </div>

                        
                    <div class="form-group col-md-12">

                        <div class="input-group date form_datetime col-md-5" style="padding: 0" data-date="" data-date-format="dd/MM/yyyy HH:mm:ss P" data-link-field="startDate">
                            @Html.TextBoxFor(model => model.startDate, new { @class = "form-control", placeholder = "Start date" })
                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"><i class="ti-close"></i></span></span>
                            <span class="input-group-addon"><span class="glyphicon glyphicon-th"><i class="ti-calendar"></i></span></span>
                        </div>
                        @Html.HiddenFor(model => model.startDate)
                        @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })

                        <span class="bar"></span>


                    </div>

                        


                        

                        

                        
                    <div class="form-group col-md-12">

                        <div class="input-group date form_datetime col-md-5" style="padding: 0" data-date="" data-date-format="dd/MM/yyyy HH:mm:ss P" data-link-field="endDate">
                            @Html.TextBoxFor(model => model.endDate, new { @class = "form-control", placeholder = "End date" })

                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"><i class="ti-close"></i></span></span>
                            <span class="input-group-addon"><span class="glyphicon glyphicon-th"><i class="ti-calendar"></i></span></span>
                        </div>
                        @Html.HiddenFor(model => model.endDate)

                        @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                        <span class="bar"></span>

                        
                    </div>

                    <div class="form-group">
                        <div class="d-flex flex-row justify-content-between">
                            <div class="col-md-6">
                                <div class="row">
                                    <button type="submit" value="Create" class="btn btn-outline-info btn-rounded">

                                        Create
                                    </button>
                                        
                                    <div style="margin: 5px;margin-left: 85px">
                                        @Html.ActionLink("Back to List", "Index")
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>

                }

               
            </div>
        </div>
    </div>
</div>
@{

<div hidden id="uidM">@ViewBag.Mycookie</div>

}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('.form_datetime').datetimepicker({
            //language: 'fr',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            forceParse: 0,
            showMeridian: 1
        });
      
        $(function() {
            //first letter miniscule

            var proxy = $.connection.notificationHub;
            $("#AddTaskForm").submit(function(event) {
                var form = this;

                proxy.server.sendNotifications($("#uidM").text(),
                    "La tache " + $("#name").val() + " a été ajoutée avec succès");

                event.preventDefault();

                setTimeout(function() {
                        form.submit();
                    },
                    1800);
            });
            $.connection.hub.start();

        });
    </script>
}
