@model RefugeeCamp.Web.ViewModels.CommandeViewModel


@using (Html.BeginForm("Create", "Commande", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order Stock</h4>
        <hr />
        @Html.ValidationSummary(true, "Error", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Commande.address, "Shipping Address ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Commande.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Commande.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Commande.country, "Country ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Commande.country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Commande.country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Commande.qteOfProduct, "Quantity ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Commande.qteOfProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Commande.qteOfProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:370px;">
            @Html.LabelFor(model => model.PostedProviderId, "Provider ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 dropdown">
               @Html.DropDownListFor(model => model.PostedProviderId, (IEnumerable<SelectListItem>)ViewData["LoadProviders"], "--Select Provider--", new { @class = "select form-control custom-select select2-hidden-accessible" })
            </div>
        </div>
        

        




        <div class="form-group">
            <div class="col-md-offset-4 col-md-10">
                <input style="width:370px"type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}