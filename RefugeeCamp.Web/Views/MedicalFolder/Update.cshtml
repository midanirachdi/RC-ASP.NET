@model RefugeeCamp.Domain.Models.medicalfolder

@{
    ViewBag.Title = "Update Medical folder";
}

<h2>Update</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>medicalfolder</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.apparences, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apparences, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apparences, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bloodpressure, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bloodpressure, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bloodpressure, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bloodtype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.bloodtype, new SelectList(new[] { "O+", "O-", "A-", "A+", "B-", "B+", "AB-", "AB+" }), new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.bloodtype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.doctorname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.doctorname, new SelectList(new[] { "Dr. Ahmed Ben Saad", "Dr. Chahine Badr", "Dr. Ben Elghali Beyram", "Dr Kadhem Kilani", "Dr. Majdi Ajroud", "Dr. Hamdi Jouini", "Dr. Blanken Michael", "Dr. Isabel Brini" }), new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.doctorname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mentalstate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mentalstate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mentalstate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
